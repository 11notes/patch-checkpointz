
name: Run a checkpoint sync test
description: Runs a consensus client and checkpoint syncs from the running checkpointz instance.

inputs:
  consensus:
    description: "The name of the consensus client to use (one of lighthouse, teku, prysm, nimbus, lodestar)."
    required: true
  network:
    description: "The name of the network to run the test against (one of ropsten, sepolia, prater/goerli)."
    required: true


runs:
  using: composite
  steps:
    - uses: actions/checkout@v1
    - name: Prepare environment
      shell: bash
      run: |
        mkdir $HOME/bin;
        export PATH=$HOME/bin:$PATH;
        echo "Running against ${{ inputs.network }} with ${{ inputs.consensus }}.";
    - name: Build checkpointz
      shell: bash
      run: |
        docker build . -t samcm/checkpointz:local;
    - name: Configure checkpointz
      shell: bash
      run: |
        cat <<EOF > checkpointz.yaml
        global:
          listenAddr: ":5555"
          logging: "debug" # panic,fatal,warm,info,debug,trace

        beacon:
          upstreams:
          - name: state-provider
            address: https://${{ inputs.network }}.checkpoint-sync.ethdevops.io
            timeoutSeconds: 30
            dataProvider: true
        EOF
    - name: Create log directories
      shell: bash
      run: |
        mkdir -p logs;
    - name: Create docker network
      shell: bash
      run: |
        docker network create eth
    - name: Run checkpointz
      shell: bash
      run: |
        echo "Starting checkpointz...";
        docker run -d --network eth -p 5555:5555 -v $(pwd):/data --name checkpointz samcm/checkpointz:local --config /data/checkpointz.yaml;
        docker logs checkpointz -f &> logs/checkpointz.log &
        docker logs checkpointz -f &
        echo "Checkpointz is running.";
    - name: Wait for checkpointz to have a finalized checkpoint
      shell: bash
      run: |
        echo "Waiting for checkpointz to have a finalized checkpoint...";
        bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:5555/eth/v1/beacon/states/head/finality_checkpoints)" != "200" ]]; do sleep 5; done';
        echo "Checkpointz has a finalized checkpoint.";
    - name: Run teku client
      shell: bash
      if:  ${{ inputs.consensus == 'teku' }}
      run: |
        echo "Starting Teku...";
        docker run -p 5052:5052 -d --name teku --network eth -e TEKU_REST_API_ENABLED=true -e TEKU_P2P_PORT=9000 consensys/teku:latest --rest-api-port=5052 --network=${{ inputs.network }} --log-destination=CONSOLE --initial-state=http://checkpointz:5555/eth/v2/debug/beacon/states/finalized --ee-endpoint=http://102.10.10.1:8545
        docker logs teku -f &> logs/consensus.log &
        docker logs teku -f &
        echo "Teku is running.";
    - name: Run ligthhouse client
      shell: bash
      if:  ${{ inputs.consensus == 'lighthouse' }}
      run: |
        echo "Starting Lighthouse...";
        docker run -p 5052:5052 --network eth -d --name lighthouse sigp/lighthouse:latest lighthouse bn --network=${{ inputs.network }} --datadir=/data --checkpoint-sync-url=http://checkpointz:5555 --http --http-address=0.0.0.0 
        docker logs lighthouse -f &> logs/consensus.log &
        docker logs lighthouse -f &
        echo "Lighthouse is running.";
    - name: Wait for consensus client to have checkpoint synced
      shell: bash
      run: |
        while true; do
          if [[ $(curl -s localhost:5052/eth/v1/node/syncing | jq '.data.head_slot|tonumber') -gt 1000 ]]; then 
            break;
          fi
          sleep 1;
        done;
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: ${{ inputs.network }}-${{ inputs.consensus }}-checkpointz.log
        path: logs/checkpointz.log
    - uses: actions/upload-artifact@v3
      if: ${{ always() }}
      with:
        name: ${{ inputs.network }}-${{ inputs.consensus }}-consensus.log
        path: logs/consensus.log